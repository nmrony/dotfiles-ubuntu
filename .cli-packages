#!/usr/bin/env bash

create-mvn-app() {
  if [ -z "$1" ] || [ -z "$2" ] ; then
    cat <<-EOF
		Usage: create-mvn-app <group-id> <artifact-id> [archetype-artifact-id]

		Options:
			group-id                   which package it should belong i.e: info.nmrony.app.example
			artifact-id                name of the artifact
			archetype-artifact-id      maven archetypeArtifactId (optional) (default: maven-archetype-quickstart)
		EOF
  else
  ARC_TYPE_ID=${3:-maven-archetype-quickstart}
  mvn archetype:generate -DgroupId=$1 \
      -DartifactId=$2 \
      -DarchetypeArtifactId=${ARC_TYPE_ID} \
      -DinteractiveMode=false
  fi
}

npm-init() {
  git init
  npx license $(npm get init.license) -o "$(npm get init.author.name)" > LICENSE
  npx gitignore node
  npx covgen "$(npm get init.author.email)"
  npm init -y
  git add -A
  git commit -m "Initial commit"

}

create-react-app() {
  npx create-react-app "$@" --use-npm
}

ng() {
  npx -p @angular/cli ng "$@"
}

cordova() {
  npx cordova "$@"
}

sls() {
  npx serverless "$@"
}

ionic() {
  npx ionic "$@"
}

nest() {
  npx @nestjs/cli "$@"
}

create-scala-app() {
  local NMR_SCALA_PROJECT_NAME;
  local NMR_SCALA_PROJECT_ORG;
  local NMR_SCALA_PROJECT_VERSION;
  local NMR_SCALA_PROJECT_SCALA_VERSION;
  vared -p 'Project Name?: [hello-world] ' -c NMR_SCALA_PROJECT_NAME
  vared -p 'Organization version?: [info.nmrony] ' -c NMR_SCALA_PROJECT_ORG
  vared -p 'Project version?: [v1.0.0-SNAPSHOT] ' -c NMR_SCALA_PROJECT_VERSION
  vared -p 'Scala version?: [2.13.1] ' -c NMR_SCALA_PROJECT_SCALA_VERSION
  NMR_SCALA_PROJECT_NAME=${NMR_SCALA_PROJECT_NAME:-hello-world}
  NMR_SCALA_PROJECT_ORG=${NMR_SCALA_PROJECT_ORG:-info.nmrony}
  NMR_SCALA_PROJECT_VERSION=${NMR_SCALA_PROJECT_VERSION:-v1.0.0-SNAPSHOT}
  NMR_SCALA_PROJECT_SCALA_VERSION=${NMR_SCALA_PROJECT_SCALA_VERSION:-2.13.1}
  echo -n 'Creating necessary directories...'
  if [ -d "$NMR_SCALA_PROJECT_NAME" ] ; then
    echo 'dir ache';
  else
    mkdir -p $NMR_SCALA_PROJECT_NAME/src/{main/{java,resources,scala},test/{java,resources,scala}}
    # cd $NMR_SCALA_PROJECT_NAME && ( cat <<EOF )
  fi
}
